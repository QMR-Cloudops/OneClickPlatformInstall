---
# This playbook will copy over Nginx Source from the Control Machine Repository to the target machine and install the software


- name: Create install_soft directory to hold the installers
  file: path={{ install_temp_directory }} owner={{ instance_owner }} group={{ instance_owner }} mode=0755 state=directory

- name: Copy installers from Control Machine to Target Machine
  copy: src={{ playbook_dir }}/roles/nginx/files/ dest={{ install_temp_directory }} mode=0664

- name: Verify pre-requisite libraries
  yum: pkg={{ item }} state=present
  with_items:
   - zlib
   - zlib-devel
   - pcre
   - pcre-devel
   - openssl
   - openssl-devel
   - gcc
   - gcc-c++   

- name: Unpack Nginx source files
  shell: cd {{ install_temp_directory }} && tar -xzvf {{ nginxsrc }}.tar.gz creates={{ install_temp_directory }}/{{ nginxsrc }}

- name: Configure Nginx with options
  command: chdir={{ install_temp_directory }}/{{ nginxsrc }}  /bin/bash ./configure --prefix={{nginx_prefix}} --user={{ instance_owner }} --group={{ instance_group }}  --with-http_ssl_module --with-http_spdy_module --with-http_secure_link_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_gzip_static_module --with-http_gunzip_module creates={{ install_temp_directory }}/{{ nginxsrc }}/Makefile

- name: Make - Nginx
  shell: cd {{ install_temp_directory }}/{{ nginxsrc }} && make

- name: Make install - Nginx   
  shell: cd {{ install_temp_directory }}/{{ nginxsrc }} && make install creates={{ nginx_prefix }}

- name: Create Nginx Soft Link
  file: src={{ nginx_prefix }} dest=/opt/www/webserver/{{ nginx_softlink_name }} state=link owner=root group=root force=yes

- name: Create Default Document Root Directory
  file: 
    path=/var/www/site-content 
    owner={{ instance_owner }}
    group={{ instance_group }}
    mode=0755
    state=directory
    force=yes

- name: Place phpinfo.php file in the DocumentRoot directory
  template: 
    src=phpinfo.php.j2
    dest=/var/www/site-content/phpinfo.php 
    mode=0755
    owner={{ instance_owner }}
    group={{ instance_group }}
    force=yes

- name: Place index.html file in the DocumentRoot directory
  template: 
    src=index.html.j2
    dest=/var/www/site-content/index.html
    mode=0755
    owner={{ instance_owner }}
    group={{ instance_group }}
    force=yes

- name: Place the Nginx Instance Restart scripts
  template: 
    src=nginx.j2
    dest=/etc/init.d/nginx
    mode=0755
    owner=root
    group=root
    force=yes

- name: Place the Nginx Startup and Shutdown scripts
  file: src=/etc/init.d/{{ item.src }} dest=/etc/rc3.d/{{ item.dest }} owner=root group=root state=link
  with_items:
    - { src: 'nginx', dest: 'S96Nginx' }
    - { src: 'nginx', dest: 'K96Nginx' }

- name: Start Nginx
  shell: cd {{ nginx_prefix }}/sbin && ./nginx
  ignore_errors: yes